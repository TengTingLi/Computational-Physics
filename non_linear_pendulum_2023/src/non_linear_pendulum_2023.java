
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;

/*
 * /*Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template*/
 



/**
 *  Title : Non linear pendulum
 * @author Teng Ting Li
 * @date 8-4-2023
 */
public class non_linear_pendulum_2023 extends javax.swing.JFrame {

    /**
     * Creates new form simple_harmonic_motion_2023
     */
    public non_linear_pendulum_2023() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panel_plot = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        panel_plot.setBackground(new java.awt.Color(0, 255, 204));

        javax.swing.GroupLayout panel_plotLayout = new javax.swing.GroupLayout(panel_plot);
        panel_plot.setLayout(panel_plotLayout);
        panel_plotLayout.setHorizontalGroup(
            panel_plotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 736, Short.MAX_VALUE)
        );
        panel_plotLayout.setVerticalGroup(
            panel_plotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 403, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(0, 0, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("<html>Non Linear Pendulum</html> ");

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Desktop\\my ting 2 university boogaloo\\sem 6\\SSCP 3333 COMPUTATIONAL PHYSICS\\non_linear_pendulum_2023\\non_linear_equation.PNG")); // NOI18N
        jLabel2.setText("jLabel2");

        jToggleButton1.setBackground(new java.awt.Color(255, 153, 255));
        jToggleButton1.setForeground(new java.awt.Color(0, 0, 0));
        jToggleButton1.setText("Calculate");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(panel_plot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panel_plot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //provided by Assosiate Prof ABD Rahman Tamuri
    //edited by Teng Ting Li
    //version 1.1.2
    // <editor-fold defaultstate="collapsed" desc=" ${Changelog} ">
    /*
    1.1.0 - defult draw format is size 1 and black to draw axis more nicely
          - rename PlotPanel to panel_plot
    1.1.1 - change clear background code to use .update method
    1.1.2 - rename initPlot to init_plot
          - rename plotPoint to plot_point
          - rename setPenSize to set_pen_size
          - rename setPenColor to set_pen_color
          - rename drawString to draw_string
          
    */
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc=" ${UrusanJavaPlot} ">


Graphics2D gg;
@Override 
public void paint(Graphics g){
gg = (Graphics2D) g;
super.paint(gg);
gg=(Graphics2D)panel_plot.getGraphics();
}

double convfx, convfy;
int offsetj,offseti;
public void init_plot(double x1,double y1,double x2, double y2,int xoffset,int yoffset){    
    //set axis drawing format
    set_pen_size(1);
    set_pen_color(Color.black);
    
    //magic
    convfx=panel_plot.getWidth()/(x2-x1);
    convfy=panel_plot.getHeight()/(y2-y1);
    double dpx = xoffset/100.0;
    double dpy = yoffset/100.0;
    offseti=(int)(panel_plot.getWidth()*dpx);
    offsetj=(int)(panel_plot.getHeight()*dpy);
    double W = panel_plot.getWidth();
    double H = panel_plot.getHeight();
    gg.drawLine(0, offsetj ,panel_plot.getWidth(),offsetj );
    gg.drawLine(offseti, 0,offseti,panel_plot.getHeight());
    //panel_plot.setBackground(Color.GREEN);
    //draw scale x
    for(int l=0;l<panel_plot.getWidth();l=l+(panel_plot.getWidth()/10)){
        gg.drawLine(offseti+l, offsetj,offseti+l,offsetj+5);
        gg.drawLine(offseti-l, offsetj,offseti-l,offsetj+5);
        gg.drawString(""+String.format("%.0f",x2*(l/W)), offseti+l-5, offsetj+20);
        gg.drawString(""+String.format("%.0f",x2*(-l/W)), offseti-l-5, offsetj+20);
    }
    //draw scale y
    for(int p=0;p<H;p= p +(int)H/10){
        gg.drawLine(offseti, offsetj-p,offseti-5,offsetj-p);
        gg.drawLine(offseti, offsetj+p,offseti-5,offsetj+p);
        gg.drawString(""+String.format("%.0f",y2*(p/H)), offseti-20, offsetj-p+5); 
        gg.drawString(""+String.format("%.0f",y2*(-p/H)), offseti-25, offsetj+p+5);
        }
    }

public void plot_point(double datax, double datay){
double sx,sy;
int i,j;
//calculate screen coordinates
sx=datax*convfx;
sy=datay*convfy;
//converst to integer plus axis offset
i=offseti+(int)sx;
j=offsetj-(int)sy;
gg.drawLine(i,j,i,j);

}
public void plotVector(double datax, double datay){
double sx,sy;
int i,j;
//calculate screen coordinates
sx=datax*convfx;
sy=datay*convfy;
//converst to integer plus axis offset
i=offseti+(int)sx;
j=offsetj-(int)sy;
gg.drawLine(offseti,offsetj,i,j);

}
public void plotVector1(double x0, double y0, double x, double y){
double sx0,sy0,sx,sy;
int i0,j0,i,j;
//calculate screen coordinates
sx0=x0*convfx;
sy0=y0*convfy;
sx=x*convfx;
sy=y*convfy;
//converst to integer plus axis offset
i0=offseti+(int)sx0;
j0=offsetj-(int)sy0;
i=offseti+(int)sx;
j=offsetj-(int)sy;
gg.drawLine(i0,j0,i,j);

}
private void set_pen_size (int penSize) {
gg.setStroke(new BasicStroke(penSize));
gg.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);

}   
 public void set_pen_color(Color penColor){
        gg.setColor(penColor);
        
    }
 
 public void draw_string(String ss, int x, int y){
     gg.drawString(ss, offseti+x, offsetj-y);
     
 }
 
 
 
 
//Urusan File
public PrintStream openfile (String filename){
PrintStream ps = null;
try{
ps = new PrintStream (new FileOutputStream(filename));
}catch (IOException e){
    System.err.printf("\nProblem creating file:%s\n\n",filename);}
return ps;
}

public void callGnuplot(javax.swing.JTextArea GnuplotCommand){
        PrintStream ps = openfile("gnuplotcmd.plt");
        String strCmd = GnuplotCommand.getText();
        ps.printf("%s\n", strCmd);
        ps.close();

        Runtime callgp = Runtime.getRuntime();
        try {
           // Process prcs = callgp.exec("C:\\gnuplot\\bin\\wgnuplot -persist gnuplotcmd.plt");
            Process prcs = callgp.exec("wgnuplot gnuplotcmd.plt");
        } catch (IOException e) {
           System.err.println ("Error calling gnuplot");
        }
    }

// </editor-fold>
    
    
    /*
    Motion of simple pendulum
    theta() = pendulum angle
    omega() = pendulum anglelar velocity
    t() = time, length() =
    dt = timestep
    */
    
    void Calculate(double theta[], double omega[], double t[], double length, double dt, double q,
                          double d_force, double d_frq){
        double g = 9.81;
        double period = 2 * Math.PI / Math.sqrt(g / length);
        t[0] = 0; 
        theta[0] = 0.2;
        omega[0] = 0;
        for(int i = 0; i < 9999; i++){
            t[i+1] = t[i] + dt;
            omega[i+1] = omega[i] 
                         - (g / length) * Math.sin(theta[i]) * dt 
                         - q * omega[i] * dt 
                         + d_force * Math.sin(d_frq * t[i]) * dt;
            theta[i+1] = theta[i] + omega[i+1] * dt;
            
            //keep value in -pi < theta < pi
            if(theta[i+1] > Math.PI){theta[i+1] = theta[i+1] - 2 * Math.PI;}
            if(theta[i+1] < -Math.PI){theta[i+1] = theta[i+1] + 2 * Math.PI;}
            plot_point(theta[i], omega[i]);
            //plot_point(theta[i],omega[i]);
        }
    }


    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        double t[] = new double[10000];
        double theta[] = new double[10000];
        double omega[] = new double[10000];
        double length = 9.81;
        double dt = 0.01;
        double q = 0.5;
        double d_force = 0.5;
        double d_frq = 2.0/3.0;
        panel_plot.update(gg);
        init_plot(0, 0, 9, 5, 50, 50);
        gg.drawString("omega (radian/s)", offseti+10, 10);
        gg.drawString("theta (radian)", panel_plot.getWidth()-50, offsetj-20);
        set_pen_size(2);
        set_pen_color(Color.red);
        gg.drawString("F_d = 1.2", panel_plot.getWidth()/2, offsetj-50);
        Calculate(theta, omega, t, length, dt, q, 1.2, d_frq);
        /*init_plot(0, 0, 50, 7, 7, 50);
        gg.drawString("time (s)", panel_plot.getWidth()-50, offsetj-10);
        set_pen_size(2);
        set_pen_color(Color.yellow);
        gg.drawString("F_d = 0.5", panel_plot.getWidth()/2, offsetj-50);
        Calculate(theta, omega, t, length, dt, q, 0.5, d_frq);
        init_plot(0, 0, 50, 25, 7, 75);
        gg.drawString("time (s)", panel_plot.getWidth()-50, offsetj-10);
        set_pen_size(2);
        set_pen_color(Color.blue);
        gg.drawString("F_d = 1.2", panel_plot.getWidth()/2, offsetj-50);
        Calculate(theta, omega, t, length, dt, q, 1.2, d_frq);*/
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed



    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(non_linear_pendulum_2023.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(non_linear_pendulum_2023.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(non_linear_pendulum_2023.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(non_linear_pendulum_2023.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new non_linear_pendulum_2023().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel panel_plot;
    // End of variables declaration//GEN-END:variables
}
