import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;





/*
 * Title: Simulation of ball rolling around hill and hole
 * @author Teng Ting Li
 * @date: 20-6-2023
 */

//ball object - might not need this
class ball{
    double x,y,v_x,v_y;
    double a_x,a_y;
    double mass,t;
    //constructor
    public ball(double x, double y, double v_x, double v_y){
        this.x = x;
        this.y = y;
        this.v_x = v_x;
        this.v_y = v_y;
        
    }
    
    public void update_a(double A, hole hole[]){
        a_x = a_y = 0;
        //loop through every hole to get the net acceleration
        for(int i = 0; i < hole.length; i++){
            double r = Math.sqrt(Math.pow(hole[i].x - x, 2)+Math.pow(hole[i].y - y, 2));
            a_x += (A * hole[i].mass * (x - hole[i].x) / r / r / r);
            a_y += (A * hole[i].mass * (y - hole[i].y) / r / r / r);
        }
    }
    
    public void update_v(double dt){
            v_x = v_x - a_x * dt;
            v_y = v_y - a_y * dt;
    }
    public void update_pos(double dt){
            x = x + v_x * dt;
            y = y + v_y * dt;
    }
}

//hole object
class hole{
    double x,y,v_x,v_y;
    double mass;
    public hole(double x, double y, double mass){
        this.x = x;
        this.y = y;
        this.mass = mass;
    }
}

public class mini_project_central_force extends javax.swing.JFrame {
    
    /**
     * Creates new form mini_project_ball_rolling_hill
     */
    public mini_project_central_force() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        panel_plot = new javax.swing.JPanel();
        b_run = new javax.swing.JButton();
        b_clear = new javax.swing.JButton();
        tf_x = new javax.swing.JTextField();
        tf_y = new javax.swing.JTextField();
        tf_v_x = new javax.swing.JTextField();
        tf_v_y = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        b_rnd_init = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tf_num_h = new javax.swing.JTextField();
        tf_dt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        b_gen_hole = new javax.swing.JButton();
        b_phase = new javax.swing.JButton();
        tf_num_h1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tf_t_max = new javax.swing.JTextField();
        tf_A = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        rb_show_hole = new javax.swing.JRadioButton();
        tf_h_x = new javax.swing.JTextField();
        tf_h_m = new javax.swing.JTextField();
        tf_no_h = new javax.swing.JTextField();
        tf_h_y = new javax.swing.JTextField();
        b_update_hole = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        tf_x_min = new javax.swing.JTextField();
        tf_y_min = new javax.swing.JTextField();
        tf_x_max = new javax.swing.JTextField();
        tf_y_max = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        b_phase_zoom = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setForeground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(255, 255, 102));

        panel_plot.setBackground(new java.awt.Color(255, 255, 255));
        panel_plot.setDoubleBuffered(false);
        panel_plot.setPreferredSize(new java.awt.Dimension(700, 700));

        javax.swing.GroupLayout panel_plotLayout = new javax.swing.GroupLayout(panel_plot);
        panel_plot.setLayout(panel_plotLayout);
        panel_plotLayout.setHorizontalGroup(
            panel_plotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        panel_plotLayout.setVerticalGroup(
            panel_plotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        b_run.setText("Run path");
        b_run.setEnabled(false);
        b_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_runActionPerformed(evt);
            }
        });

        b_clear.setText("Clear path");
        b_clear.setEnabled(false);
        b_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clearActionPerformed(evt);
            }
        });

        tf_x.setText("0.1");

        tf_y.setText("0.1");

        tf_v_x.setText("0.05");

        tf_v_y.setText("0.01");

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("x");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("y");

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("v_x");

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("v_y");

        b_rnd_init.setText("Randomize");
        b_rnd_init.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_rnd_initActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Particle Initial condition");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Hole Setting");

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("number of hole");

        tf_num_h.setText("2");

        tf_dt.setText("0.1");

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("dt");

        b_gen_hole.setText("<html>\nGenerate random hole\n</html>");
        b_gen_hole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_gen_holeActionPerformed(evt);
            }
        });

        b_phase.setText("Draw phase plot");
        b_phase.setEnabled(false);
        b_phase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_phaseActionPerformed(evt);
            }
        });

        tf_num_h1.setText("50");

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("phase grid size");

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("t_max");

        tf_t_max.setText("1000");

        tf_A.setText("0.00005");

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("A");

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Phase plot setting");

        rb_show_hole.setForeground(new java.awt.Color(0, 0, 0));
        rb_show_hole.setSelected(true);
        rb_show_hole.setText("show hole location");

        tf_h_x.setText("0.5");
        tf_h_x.setEnabled(false);

        tf_h_m.setText("10");
        tf_h_m.setEnabled(false);

        tf_no_h.setText("1");
        tf_no_h.setEnabled(false);

        tf_h_y.setText("0.5");
        tf_h_y.setEnabled(false);

        b_update_hole.setText("Update");
        b_update_hole.setEnabled(false);
        b_update_hole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_update_holeActionPerformed(evt);
            }
        });

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("hole");

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("x");

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("y");

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("mass");

        tf_x_min.setText("0");

        tf_y_min.setText("0");

        tf_x_max.setText("1");
        tf_x_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_x_maxActionPerformed(evt);
            }
        });

        tf_y_max.setText("1");
        tf_y_max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_y_maxActionPerformed(evt);
            }
        });

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("x min");

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("y min");

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("x max");

        jLabel25.setBackground(new java.awt.Color(0, 0, 0));
        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("y max");

        jLabel26.setBackground(new java.awt.Color(0, 0, 0));
        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Zoom");

        b_phase_zoom.setText("Zoom phase plot");
        b_phase_zoom.setEnabled(false);
        b_phase_zoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_phase_zoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(12, 12, 12)
                                                .addComponent(tf_v_x, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(tf_x, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(tf_y))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(12, 12, 12)
                                                .addComponent(tf_v_y))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(b_rnd_init)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(28, 28, 28))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel24))
                                .addGap(11, 11, 11)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_x_max, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_x_min, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_y_min, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_y_max, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_num_h1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rb_show_hole, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(b_run)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_clear))
                            .addComponent(b_phase, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_phase_zoom, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_h_m, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tf_no_h, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(tf_h_x, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(6, 6, 6)
                                        .addComponent(tf_h_y, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(65, 65, 65)
                                        .addComponent(b_update_hole, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_num_h, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(13, 13, 13)
                                .addComponent(tf_t_max, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_dt, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_A, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(b_gen_hole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(panel_plot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(tf_y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(tf_v_x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tf_v_y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_rnd_init)
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_A, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_dt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tf_t_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tf_num_h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_no_h, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_h_x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(tf_h_y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_h_m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(b_update_hole, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(b_gen_hole, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tf_num_h1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rb_show_hole)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24)
                                .addComponent(tf_y_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tf_x_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_x_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel23)
                                .addComponent(tf_y_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_run)
                    .addComponent(b_clear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_phase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_phase_zoom)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(panel_plot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Simulation", jPanel2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Central Force - Gravitational Force");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("<html>\n<b>INFO: </b><br></br>\nIn this simulation, a ball is attracted by diffenent mass with this simple equation of motion: <br></br>\n<b>2 main feature of this program are: </b><br></br>\n<b>(1) </b>Simulate the path of a single ball under the influence of other mass/hole<br></br>\n- the ball is assume to have no influence on mass/hole and is point like<br></br>\n- the mass/hole is assume to be point like, the circle only indicate location and the mass<br></br>\n<br></br>\n<b>(2) </b>Drawing Phase plot<br></br>\n- the ball will be place sequentially in a grid determinate by a grid size which can be change<br></br>\n- the path of the ball will be simulate for each square of the grid<br></br>\n- after path has been simulated, a square will be drawn on the initail position of the ball with a color which is based on how long the particle traval in the range of 0 to 1.0 for x and y<br></br>\n&nbsp  - black means ball leaves the allow range instantly<br></br>\n&nbsp - reddish brown means ball travel quite some time before leaving the allow range<br></br>\n&nbsp - white means ball were still inside the allow range even after maximum time simulated, usually means the ball is orbiting one of the mass/hole<br></br>\n&nbsp - blue means ball hit one of the mass/hole\n</html>");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("<html> <b>How to use the program: </b><br></br> \n- You can change the initial position and velocity of the particle<br></br>\n - You can only change the position of the hole after generating random hole<br></br>\n - You <u> can only calculate path and phase plot after generating hole</u><br></br>\n - the range of path simulated for ball in this program is between 0 to 1 for x and y<br></br>\n - zoom in phase plot will recalculate only in the range specify<br></br> \n<br></br> \n<b>for performances:</b><br></br> \n- dt of 0.1 will be fast but inaccurate, dt of 0.01 will be slow but accurate<br></br>\n - t max of 500 to 1000 is sufficient<br></br> \n- grid size of 100 will be slow if you have slow computer<br></br>\n-grid size of more than 600 is not recommended since plot panel has max size of 700 pixel\n</html>");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("<html>\n<table>\n<tr>\n&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp GMm\n</tr>\n<tr>\nF = --------\n</tr>\n<tr>\n&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp r<sup>2</sup>\n</tr>\n</table>\n</html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 290, Short.MAX_VALUE))
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(348, 348, 348))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(650, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(177, 177, 177)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(585, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Infomation", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 976, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_y_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_y_maxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_y_maxActionPerformed

    private void b_update_holeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_update_holeActionPerformed
        int i = Integer.parseInt(tf_no_h.getText()) - 1;
        double x = Double.parseDouble(tf_h_x.getText());
        double y = Double.parseDouble(tf_h_y.getText());
        double mass = Double.parseDouble(tf_h_m.getText());
        hole[i].x = x;
        hole[i].y = y;
        hole[i].mass = mass;
        panel_plot.update(gg);
        init_init_plot_lol(panel_plot);
        draw_hole(hole);
    }//GEN-LAST:event_b_update_holeActionPerformed

    private void b_phaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_phaseActionPerformed
        int grid = Integer.parseInt(tf_num_h1.getText());
        
        set_pen_color(Color.white);
        gg.fillRect(offseti-20, offsetj, 700, 100);
        gg.fillRect(0, 0, offseti, 700);
        init_plot(0,0,1,1,5,95);
        
        draw_path_toggle = false;
        draw_hole_toggle = rb_show_hole.isSelected();
        
        draw_phase_plot(0,1,0,1,grid);
    }//GEN-LAST:event_b_phaseActionPerformed

    private void b_gen_holeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_gen_holeActionPerformed
        init_init_plot_lol(panel_plot);
        //generate hole
        int num_h = Integer.parseInt(tf_num_h.getText());
        hole = create_hole(num_h);
        //only after hole is generated that these option can be use
        //if not then these option will call empty hole object which cause error
        b_run.setEnabled(true);
        b_phase.setEnabled(true);
        b_phase_zoom.setEnabled(true);
        b_update_hole.setEnabled(true);
        tf_no_h.setEnabled(true);
        tf_h_x.setEnabled(true);
        tf_h_y.setEnabled(true);
        tf_h_m.setEnabled(true);
        b_clear.setEnabled(true);
    }//GEN-LAST:event_b_gen_holeActionPerformed

    private void b_rnd_initActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_rnd_initActionPerformed
        //randomize initial state of ball
        tf_x.setText(String.format("%.2f", random(0,1)));
        tf_y.setText(String.format("%.2f", random(0,1)));
        tf_v_x.setText(String.format("%.3f", random(-0.05, 0.05)));
        tf_v_y.setText(String.format("%.3f", random(-0.05, 0.05)));
    }//GEN-LAST:event_b_rnd_initActionPerformed

    private void b_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clearActionPerformed
        panel_plot.update(gg);
        init_init_plot_lol(panel_plot);
        draw_hole(hole);
    }//GEN-LAST:event_b_clearActionPerformed

    private void b_runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_runActionPerformed
        //get variable
        double x = Double.parseDouble(tf_x.getText());
        double y = Double.parseDouble(tf_y.getText());
        ball ball_lol = new ball(x,y,0,0);

        draw_path_toggle = true;
        draw_hole_toggle = rb_show_hole.isSelected();
        //only calculate 1 path
        calculate_path(x, y, ball_lol,hole);
    }//GEN-LAST:event_b_runActionPerformed

    private void tf_x_maxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_x_maxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_x_maxActionPerformed

    private void b_phase_zoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_phase_zoomActionPerformed
        int grid = Integer.parseInt(tf_num_h1.getText());
        double x_min = Double.parseDouble(tf_x_min.getText());
        double y_min = Double.parseDouble(tf_y_min.getText());
        double x_max = Double.parseDouble(tf_x_max.getText());
        double y_max = Double.parseDouble(tf_y_max.getText());
        
        set_pen_color(Color.white);
        gg.fillRect(offseti-20, offsetj, 700, 100);
        gg.fillRect(0, 0, offseti, 700);
        init_plot(x_min,y_min,x_max,y_max,5,95);
        
        draw_path_toggle = false;
        draw_hole_toggle = false;
        
        draw_phase_plot(x_min,x_max,y_min,y_max,grid);
    }//GEN-LAST:event_b_phase_zoomActionPerformed
    
    //provided by Assosiate Prof Dr ABD Rahman Tamuri
    //modify by Teng Ting Li
    //version 1.4.0
     // <editor-fold defaultstate="collapsed" desc=" ${Changelog} ">
    /*
    1.1.0 - defult draw format is size 1 and black to draw axis more nicely
          - rename PlotPanel to panel_plot
    1.1.1 - change clear background code to use .update method
    1.1.2 - rename initPlot to init_plot
          - rename plotPoint to plot_point
          - rename setPenSize to set_pen_size
          - rename setPenColor to set_pen_color
          - rename drawString to draw_string
    1.2.0 - disabled paint method
          - (deprecated)need to specific init_plot() to draw on what panel
            - special thanks to bryan chong
          - modified spacing of code for readability
    1.2.1 - re-enable paint method, seem like it is needed to use plot.update(gg)
    1.2.2 - added draw_axis function
    1.2.3 - seperated gg draw declaration to its own method draw(Jpanel)
            to reduce lag resulting from using panel.refresh(gg)
    1.3.0 - rename xoffset to x_offset_percent and change type from int to double
          - same with yoffset
          - increase tickmark drawn from 9 to 10
          - added draw_line with take coordinate of user instead of screen coordinate
    1.4.0 - origin of axis can finally be changed
          - plot_point can be plotted based on said origin
          - same with draw_line
          - plot vector now only work if origin is at (0,0)
    */
    // </editor-fold>
     // <editor-fold defaultstate="collapsed" desc=" ${UrusanJavaPlot} ">


    Graphics2D gg;
    javax.swing.JPanel p_panel;  //placeholder panel variable, acts like pointer for panel to draw
    
    //no idea what any of this do, seems like java legacy stuff
    @Override 
    public void paint(Graphics g){
    gg = (Graphics2D) g;
    super.paint(gg);
    }
    
    public void draw(javax.swing.JPanel plot){
        //set what panel to draw on
        p_panel = plot;
        gg = (Graphics2D)plot.getGraphics();
    }
    
    double convfx, convfy;  //conversion ratio from user coordinate to panel coordinate
    int offsetj,offseti;    //offset in panel coordinate
    double W,H;                //declare as variable for easy recall
    
    public void init_plot(double x1,double y1,double x2, double y2,
                          double x_offset_percent,double y_offset_percent){
        //set axis drawing format
        set_pen_size(1);
        set_pen_color(Color.black);

        //panel width and height but smaller to fit tickmark
        W = (p_panel.getWidth() * 0.9); 
        H = (p_panel.getHeight() * 0.9);
        
        //magic for here
        //coefficient that convert user coordinate to screen coordinate
        convfx=W/(x2-x1);  
        convfy=H/(y2-y1);
        
        //determinte the offset point based on panel original width and height
        double dpx = x_offset_percent/100.0;
        double dpy = y_offset_percent/100.0;
        offseti=(int)(p_panel.getWidth()*dpx);
        offsetj=(int)(p_panel.getHeight()*dpy);
        
        //draw axis line
        gg.drawLine(0, offsetj ,getWidth(),offsetj );
        gg.drawLine(offseti, 0,offseti,getHeight());
        
        //draw scale x with tickmark
        for(double i = 0; i < 11; i++){
            int l = (int)(i/10.0*W);
            gg.drawLine(offseti+l, offsetj,offseti+l,offsetj+5);
            gg.drawLine(offseti-l, offsetj,offseti-l,offsetj+5);
            gg.drawString(""+String.format("%.2f",x1+(x2-x1)*(l/W)), offseti+l-5, offsetj+20);
            gg.drawString(""+String.format("%.2f",x1+(x2-x1)*(-l/W)), offseti-l-5, offsetj+20);
        }
        //draw scale y with tickmark
        for(double i = 0; i < 11; i++){
            int p = (int)(i/10.0*H);
            gg.drawLine(offseti, offsetj-p,offseti-5,offsetj-p);
            gg.drawLine(offseti, offsetj+p,offseti-5,offsetj+p);
            gg.drawString(""+String.format("%.2f",y1+(y2-y1)*(p/H)), offseti-26, offsetj-p+4); 
            gg.drawString(""+String.format("%.2f",y1+(y2-y1)*(-p/H)), offseti-31, offsetj+p+4);
        }
    }

    public void plot_point(double x, double y,double x0,double y0){
        //x0 & y0 will be the origin
        double sx,sy;
        int i,j;
        //calculate screen coordinates
        sx = (x - x0) * convfx;
        sy = (y - y0) * convfy;
        //converst to integer plus axis offset
        i=offseti+(int)sx;
        j=offsetj-(int)sy;
        gg.drawLine(i,j,i,j);
    }
    
    public void draw_line(double x1,double y1,double x2,double y2,double x0,double y0){
        //see plot_point for math explanation
        gg.drawLine(offseti+(int)((x1 - x0) * convfx), 
                    offsetj-(int)((y1 - y0) * convfy), 
                    offseti+(int)((x2 - x0) * convfx), 
                    offsetj-(int)((y2 - y0) * convfy));
    }
    
    public void draw_rect(double x1,double y1,double x2,double y2,double x0, double y0){
        gg.fillRect(//x1 & y1 is upper left coordinate of the box
                    offseti+(int)((x1-x0)*convfx), 
                    offsetj-(int)((y1-y0)*convfy), 
                    //x2 & y2 is size of square
                    (int)((x2)*convfx)+1, 
                    (int)((y2)*convfy)+1);
        //draw a second time to actually fill the square
        gg.fillRect(offseti+(int)((x1-x0)*convfx), 
                    offsetj-(int)((y1-y0)*convfy), 
                    (int)((x2)*convfx)+1, 
                    (int)((y2)*convfy)+1);
        
    }
  
    
    public void plotVector(double datax, double datay){
        double sx,sy;
        int i,j;
        //calculate screen coordinates
        sx=datax*convfx;
        sy=datay*convfy;
        //converst to integer plus axis offset
        i=offseti+(int)sx;
        j=offsetj-(int)sy;
        gg.drawLine(offseti,offsetj,i,j);
        }
    
    public void plotVector1(double x0, double y0, double x, double y){
        double sx0,sy0,sx,sy;
        int i0,j0,i,j;
        //calculate screen coordinates
        sx0=x0*convfx;
        sy0=y0*convfy;
        sx=x*convfx;
        sy=y*convfy;
        //converst to integer plus axis offset
        i0=offseti+(int)sx0;
        j0=offsetj-(int)sy0;
        i=offseti+(int)sx;
        j=offsetj-(int)sy;
        gg.drawLine(i0,j0,i,j);
    }
    
    private void set_pen_size (int penSize) {
        gg.setStroke(new BasicStroke(penSize));
        gg.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
    }
    
    public void set_pen_color(Color penColor){
        gg.setColor(penColor);  
    }
    
    public void draw_string(String ss, int x, int y){
         gg.drawString(ss, offseti+x, offsetj-y); //offseti is in pixel of the 
    }
 
    public void draw_axis(String x_label,String y_label){
        //draw x_label above the end of positive x axis
        int y_pixel_length = (int)(y_label.length() * 6.5);
        gg.drawString(x_label, (int)W - y_pixel_length, offsetj - 8);
        //draw y_label beside the top of positive y axis
        gg.drawString(y_label, offseti+2,8);
    }
 
 
    //Urusan File
    public PrintStream openfile (String filename){
        PrintStream ps = null;
        try{
            ps = new PrintStream (new FileOutputStream(filename));
        }catch (IOException e){
        System.err.printf("\nProblem creating file:%s\n\n",filename);}
        return ps;
    }

    public void callGnuplot(javax.swing.JTextArea GnuplotCommand){
        PrintStream ps = openfile("gnuplotcmd.plt");
        String strCmd = GnuplotCommand.getText();
        ps.printf("%s\n", strCmd);
        ps.close();

        Runtime callgp = Runtime.getRuntime();
        try {
           // Process prcs = callgp.exec("C:\\gnuplot\\bin\\wgnuplot -persist gnuplotcmd.plt");
            Process prcs = callgp.exec("C:\\Users\\User\\Desktop\\my ting 2 university boogaloo\\sem 6\\SSCP3333 COMPUTATIONAL PHYSICS\\wgnuplot gnuplotcmd.plt");
        } catch (IOException e) {
           System.err.println ("Error calling gnuplot");
        }
    }

// </editor-fold>
    
    public void init_init_plot_lol(javax.swing.JPanel panel_t){
        //initial graphics
        panel_t.update(gg);
        draw(panel_t);
        init_plot(0,0,1,1,5,95);
        draw_line(1,0,1,1,0,0);
        draw_line(0,1,1,1,0,0);
        set_pen_size(1);
    }
    
    public void draw_circle(double x1,double y1,int r){
        gg.drawOval(offseti+(int)(x1*convfx)-r/4, 
                    offsetj-(int)(y1*convfy)-r/4, 
                    r/2,r/2);
    }
    
    public double random(double min, double max){
        return min + Math.random() * (max - min);
    }
    
    
    public hole[] create_hole(int num_h){
        //create hole object
        hole my_hole[] = new hole[num_h];
        for(int i = 0; i < num_h; i++){
            double xh = random(0,1.0);
            double yh = random(0,1.0);
            double mh = random(1,20);
            my_hole[i] = new hole(xh,yh,mh);
        }
        draw_hole(my_hole);
        return my_hole;
    }
    
    public void draw_hole(hole hole_to_draw[]){
        set_pen_color(Color.red);
        //loop through all hole in the array and draw on screen
        for(int i = 0; i < hole_to_draw.length; i++){
            plot_point(hole_to_draw[i].x, hole_to_draw[i].y,0,0);
            draw_circle(hole_to_draw[i].x, hole_to_draw[i].y, 10*(int)hole_to_draw[i].mass);
    }}
    
    public void draw_phase_plot(double x1, double x2, double y1, double y2, int grid_size){
        //get variable
        int grid = grid_size;
        double dx = (x2 - x1) / grid;
        double dy = (y2 - y1) / grid;
        double x = x1 + dx / 2;
        double y = y1 + dy / 2;
        double v_x = Double.parseDouble(tf_v_x.getText());
        double v_y = Double.parseDouble(tf_v_y.getText());
        
        double t;
        double t_max = Double.parseDouble(tf_t_max.getText());
        
        ball ball_lol = new ball(x,y,v_x,v_y);
        
        //loop and calculate all path in the phase grid
        for(int i = 0; i < grid; i++){
            x = x1 + dx / 2;
            for(int j = 0; j < grid; j++){
                calculate_path(x, y, ball_lol,hole);
                draw_rect(x-dx/2,y+dy/2,dx,dy,x1,y1);
                x += dx;
            }
            
            y += dy;
            
        }

        if(draw_hole_toggle){draw_hole(hole);}
    }


    
    public void calculate_path(double x, double y,
                               ball ball_1,hole hole[]){
        //set initail variable
        ball_1.x = x;
        ball_1.y = y;
        ball_1.v_x = Double.parseDouble(tf_v_x.getText());
        ball_1.v_y = Double.parseDouble(tf_v_y.getText());
        double t;
        double dt = Double.parseDouble(tf_dt.getText());
        double t_max = Double.parseDouble(tf_t_max.getText());
        double A = Double.parseDouble(tf_A.getText());
        boolean hit = false;
        
        //loop for simulation using euler cromer method
        for(t = 0; t < t_max-dt; t += dt){
            ball_1.update_a(A, hole);
            ball_1.update_v(dt);
            ball_1.update_pos(dt);
            
            //stop loop if touch boundry
            if(ball_1.x > 1.5 || ball_1.y > 1.5 || ball_1.x < -0.5 || ball_1.y < -0.5)
            {break;}
            //stop loop if ball hit hole
            double r = 1;
            for(int i = 0; i < hole.length; i++){
                r = Math.hypot(ball_1.x - hole[i].x, ball_1.y - hole[i].y);
                if(r < 0.005){break;}
            }
            if(r < 0.005){hit = true; break;}
            //for displaying path
            if(draw_path_toggle && 
               !(ball_1.x > 1 || ball_1.y > 1 || ball_1.x < 0 || ball_1.y < 0)){
                set_pen_color(new Color(0,255,0));
                set_pen_size(3);
                plot_point(ball_1.x, ball_1.y,0,0);
            }
        }
        //set colour of the point in the phase plot
        double tt = t / t_max;

        try{
        set_pen_color(new Color((int)(255*tt),(int)(255*tt*tt),(int)(255*tt*tt*tt)));
        }catch(Exception ee){System.out.println(tt);}
        
        if(hit){set_pen_color(new Color(0,0,255));}
    }
    
    
    //create hole object as global object for easy position recall
    hole hole[];
    boolean draw_hole_toggle = true;
    boolean draw_path_toggle = false;
                
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mini_project_central_force.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mini_project_central_force.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mini_project_central_force.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mini_project_central_force.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mini_project_central_force().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_clear;
    private javax.swing.JButton b_gen_hole;
    private javax.swing.JButton b_phase;
    private javax.swing.JButton b_phase_zoom;
    private javax.swing.JButton b_rnd_init;
    private javax.swing.JButton b_run;
    private javax.swing.JButton b_update_hole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panel_plot;
    private javax.swing.JRadioButton rb_show_hole;
    private javax.swing.JTextField tf_A;
    private javax.swing.JTextField tf_dt;
    private javax.swing.JTextField tf_h_m;
    private javax.swing.JTextField tf_h_x;
    private javax.swing.JTextField tf_h_y;
    private javax.swing.JTextField tf_no_h;
    private javax.swing.JTextField tf_num_h;
    private javax.swing.JTextField tf_num_h1;
    private javax.swing.JTextField tf_t_max;
    private javax.swing.JTextField tf_v_x;
    private javax.swing.JTextField tf_v_y;
    private javax.swing.JTextField tf_x;
    private javax.swing.JTextField tf_x_max;
    private javax.swing.JTextField tf_x_min;
    private javax.swing.JTextField tf_y;
    private javax.swing.JTextField tf_y_max;
    private javax.swing.JTextField tf_y_min;
    // End of variables declaration//GEN-END:variables
}
